<Application x:Class="PUBGTweaker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PUBGTweaker"
             StartupUri="Main.xaml"
            ShutdownMode="OnExplicitShutdown">
    <Application.Resources>

        <Style x:Key="MBButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentMain)}" />
            <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentText)}" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="Times New Roman" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderThickness="0" CornerRadius="0"  Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentFocus)}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentHover)}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                                <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentTextDown)}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                                <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentTextDown)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="MainButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentMain)}" />
            <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentText)}" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="Height" Value="180" />
            <Setter Property="Width" Value="180" />
            <Setter Property="Margin" Value="25,25,25,0" />
            <Setter Property="Padding" Value="6" />
            <Setter Property="Content" Value="G" />
            <Setter Property="FontSize" Value="150" />
            <Setter Property="FontFamily" Value="pack://application:,,,/Font/#privazet" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderThickness="0" CornerRadius="0"  Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentFocus)}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentHover)}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                                <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentTextDown)}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                                <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentTextDown)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="#BDBDBD" />
            <Setter Property="Background" Value="#0E0E0E" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="#BDBDBD" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Background="#0E0E0E" BorderBrush="#BDBDBD" BorderThickness="1" CornerRadius="0">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--HorizontalAlignment="Center" FontFamily="Times New Roman" FontSize="16"-->
        <Style x:Key="BTNLabel" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentText)}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontFamily" Value="Times New Roman" />
            <Setter Property="FontSize" Value="16" />
        </Style>


        <Style x:Key="HeaderBTN" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Width" Value="36" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentMain)}" />
            <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentText)}" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="Times New Roman" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="DockPanel.Dock" Value="Right" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="border" BorderThickness="0" CornerRadius="0"  Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentHover)}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{Binding Path=(local:AppStyle.AccentButtonDown)}" />
                                <Setter Property="Foreground" Value="{Binding Path=(local:AppStyle.AccentTextDown)}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                            CornerRadius="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="17"
                            Height="Auto"
                            Margin="0"
                            Background="#3b3b3b" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="17" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="CornerScrollBarRectangle" Value="#464646" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
            Value="True" />
            <Setter Property="Foreground"
            Value="#ADABAB" />
            <Setter Property="Background"
            Value="#2A2A2A" />
            <Setter Property="Width"
            Value="17" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                        Width="17"
                        Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                            Command="ScrollBar.PageDownCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                            Command="ScrollBar.PageUpCommand"
                                            Opacity="0"
                                            Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                Property="IsMouseOver"
                                Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                Property="IsDragging"
                                Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                TargetName="Thumb"
                                Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                Value="false">
                                <Setter TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                Value="Horizontal">
                                <Setter Property="Visibility" Value="Collapsed" />
                                <Setter TargetName="GridRoot"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                Value="Auto" />
                                <Setter Property="Height"
                                Value="8" />
                                <Setter TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Application.Resources>
</Application>
